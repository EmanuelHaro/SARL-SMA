/** 
 * 
 */
import io.sarl.api.core.Destroy
import io.sarl.api.core.Initialize
import io.sarl.api.core.Logging
import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Schedules

/** 
 * 
 */
agent CuboB {
	uses DefaultContextInteractions, Schedules, Logging

	var posicionCuboB : int
	
	var posicionDeseada = 3

	on Initialize {
		//info("Esperando inicializacion de los 3 cubos")
		loggingName = "CuboB"
		posicionCuboB = 2
		val taskVar = task("waiting_for_partner")

		taskVar.every(5000) [
			if (defaultSpace.numberOfStrongParticipants > 3) {
				//info("Elemntos instanciados")

				taskVar.cancel
			}
		]
	}
	
	on PosicionCuboA {
		info("Posicion Cubo A: #" + occurrence.index)
	}
	
	on PedirPosicion {
		emit(new PosicionCuboB(posicionCuboB))
	}

	on PosicionCuboA {
		if (occurrence.index == posicionDeseada) {
			info("Busco pelea")
		} else {
			info("todo ok")
		}
	}

	on PosicionCuboC {
		if (occurrence.index == posicionDeseada) {
			info("Busco pelea")
		} else {
			info("todo ok")
		}
	}
	

	on Destroy {
		// Event trigger when the agent is destroyed from the system.
		// You should put all the resource releasing statements in this block of code.
		info("The agent was stopped.")
	}

	def EstaSatisfescho {
		info("Estoy satisfecho")
	}

	def Huir {
		info("Huyo")
	}

	def Molestar {
		info("Molesto")
	}

}
