/** 
 * 
 */
import io.sarl.api.core.Destroy
import io.sarl.api.core.Initialize
import io.sarl.api.core.Logging
import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Schedules


/** 
 * 
 */
agent CuboA {
	uses DefaultContextInteractions, Schedules, Logging
	
	val name = "CuboA"
	var posicionCuboA : int
	
	on Initialize {
		//info("Esperando inicializacion de los 3 cubos")
		loggingName = name
		
		val taskVar = task("esperando_cubos")

		taskVar.every(5000) [
			if (defaultSpace.numberOfStrongParticipants >= 4) {
				//info("Elemntos instanciados")
				
				taskVar.cancel
			}
		]
	}
	
	on PosicionMesa {
		info("Posicion Mesa: #" + occurrence.index)
		emit(new PosicionCuboA(posicionCuboA))//[it == occurrence.source]
	}

	on Destroy {
		// Event trigger when the agent is destroyed from the system.
		// You should put all the resource releasing statements in this block of code.
		info("The agent was stopped.")
	}
	
	def EstaSatisfescho {
		info("Estoy satisfecho")
	}

	def Huir {
		info("Huyo")
	}

	def Molestar {
		info("Molesto")
	}
}
